#!/usr/bin/env bash

# Renew the Let's Encrypt certificate, taking care of the firewall before and after.
# This is required as Let's Encrypt demand that a number of geographically distributed auth
# challenges pass before they issue a new cert.

# This normally collides with our unwillingness to accept connections from geographically divers
# locations.

Me=$(basename ${0})

# Bail out if we are not what we need to be
if [ ${UID} != 0 ]
then
	cat <<-EOM >&2
		${Me}: fatal: insufficient privileges (must be root)
	EOM
	exit -2
fi

# The firewall rule that handles cert renewals
The_Cert_Rule_Spec="--jump cert-puncture"

# The chain and the position within where we need to temporarily suspend the strict regime
In_The_Cert_Rule_Chain="GEOK"
At_The_Cert_Rule_Chain_Posn=1

# Helpers to make it all more readable
          Iptables="iptables"
             Iptlv="${Iptables} --list --verbose"
Insert_Into_The_Fw="${Iptables} --insert"
Delete_From_The_Fw="${Iptables} --delete"

# Have some tmp files for firewall snapshots
Template="/tmp/Iptlv-XXXXXXXX"
  Before=$(mktemp --suffix=.b4 ${Template})
  In_Btw=$(mktemp --suffix=.ib ${Template})
   After=$(mktemp --suffix=.af ${Template})

${Iptlv} >${Before}
echo "${Me}: drilling calculated hole into the firewall"
${Insert_Into_The_Fw} ${In_The_Cert_Rule_Chain} ${At_The_Cert_Rule_Chain_Posn} ${The_Cert_Rule_Spec}

	# The next few statements cannot happen quickly enough; it's not a bad idea to think about
	# upping the resources until right after the undoing of the previous statement.
	echo "${Me}: attempting to renew the cert"
	certbot renew
	${Iptlv} >${In_Btw}
	${Delete_From_The_Fw} ${In_The_Cert_Rule_Chain} ${The_Cert_Rule_Spec}

# Ok, from here on, we can be lazy again.
echo "${Me}: sealed hole in the firewall again"
${Iptlv} >${After}

echo "${Me}: showing what happened in the firewall"
git diff --no-index -- ${Before} ${In_Btw}
git diff --no-index -- ${In_Btw} ${After}
# This one's diff sugar
git diff --no-index -- ${Before} ${After}

# Cleanup
rm -f ${Before} ${In_Btw} ${After}

# Reload web server; this will pull in the new cert
systemctl reload apache2

# Look cursorily at the new cert.  This probably only works if run on the very machine.
/root/bin/get-pop3-server-ssl-cert-fingerprint --server localhost --port https | head
