#!/usr/bin/env bash

# A Git porcelain command to determine the left-right
# relationship in terms of which commits are where between a
# branch and its upstream.

# Accepts branches as parameters, defaults to current one.

Branches="${@}"

if [ -z "${Branches}" ]
then

   Branches="git symbolic-ref --short HEAD"
   if ! Branches=$(${Branches})
   then

      cat << Eom >&2
Cannot determine the name of your local branch
Eom
      # This is fatal.
      exit -1

   fi
fi

for This in ${Branches}
do

   Remote="git config --get branch.${This}.remote"
   if ! Remote=$(${Remote})
   then

      cat << Eom >&2
Cannot determine remote for ${This} branch
Eom
      continue

   fi

   Url="git config --get remote.${Remote}.url"
   if ! Url=$(${Url})
   then

      cat << Eom >&2
Cannot determine URL for ${Remote}
Eom
      # Used for cosmetics only.  Carry on.
      Url="<could not be determined>"

   fi

   That="git config --get branch.${This}.merge"
   if ! That=$(${That})
   then

      cat << Eom >&2
Cannot determine the name of upstream branch for ${This}
Eom
      continue

   fi

   That="eval perl -pe 's|refs/heads/||;' <<< ${That}"
   if ! That=$(${That})
   then

      cat << Eom >&2
Cannot normalise name of upstream branch
Eom
      continue

   fi

   # A sloppy name for what's known as the symmetric difference.
   This_N_That="${This}...${Remote}/${That}"
   echo "${This_N_That} (from ${Url})"

   Cmd="git log --left-right --oneline ${This_N_That}"
   if ! ${Cmd}
   then

      cat << Eom >&2
Cannot determine relationship for ${This_N_That}
Eom
      continue

   fi

done
