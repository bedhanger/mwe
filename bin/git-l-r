#!/usr/bin/env bash

# A Git porcelain command to determine the left-right
# relationship in terms of which commits are where between a
# branch and its upstream.

# Accepts branches as parameters, defaults to current one.

branches="${@}"

if [ -z "${branches}" ]
then

   branches="git symbolic-ref --short HEAD"
   if ! branches=$(${branches})
   then

      cat << eom >&2
Cannot determine the name of your local branch
eom
      # This is fatal.
      exit -1

   fi
fi

for this in ${branches}
do

   remote="git config --get branch.${this}.remote"
   if ! remote=$(${remote})
   then

      cat << eom >&2
Cannot determine remote for ${this} branch
eom
      continue

   fi

   url="git config --get remote.${remote}.url"
   if ! url=$(${url})
   then

      cat << eom >&2
Cannot determine URL for ${remote}
eom
      # Used for cosmetics only.  Carry on.
      url="<could not be determined>"

   fi

   that="git config --get branch.${this}.merge"
   if ! that=$(${that})
   then

      cat << eom >&2
Cannot determine the name of upstream branch for ${this}
eom
      continue

   fi

   that="eval perl -pe 's|refs/heads/||;' <<< ${that}"
   if ! that=$(${that})
   then

      cat << eom >&2
Cannot normalise name of upstream branch
eom
      continue

   fi

   # A sloppy name for what's known as the symmetric difference.
   this_n_that="${this}...${remote}/${that}"
   echo "${this_n_that} (from ${url})"

   cmd="git log --left-right --oneline ${this_n_that}"
   if ! ${cmd}
   then

      cat << eom >&2
Cannot determine relationship for ${this_n_that}
eom
      continue

   fi

done
