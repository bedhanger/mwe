#!/usr/bin/env bash

# Perform backupth

me=$(basename ${0})

if [ ${UID} != 0 ]
then
   echo "${me}> must be root..." >&2
   exit -1
fi

bupthrc=${HOME}/.bupthrc
dry_run=false

function rhs()
{
   cut --fields=2 --delimiter='=' <<< ${@}
}

function usage()
{
   msg=${1}
   cat << EOM >&2
${1}

Usage is: ${me} [option]
   where option is
      --bupthrc to specify an alternate control file [${bupthrc}]
      --dry-run to do everything except writing to storage
EOM
}

for option in "${@}"
do
   case "${option}" in
      --bupthrc=*)
         bupthrc=$(rhs ${option})
         ;;
      --dry-run)
         dry_run=true
         ;;
      *)
         usage "${me}> unknown option"
         exit -2
         ;;
   esac
done

if [ -e ${bupthrc} ]
then
   source ${bupthrc}
else
   usage "${me}> cannot find control file ${bupthrc}"
   exit -3
fi

for fs2bs in ${fs2bs_map}
do

   fs=$(cut --fields=1 --delimiter=${map_delimiter} <<< ${fs2bs})
   bs=$(cut --fields=2 --delimiter=${map_delimiter} <<< ${fs2bs})

   if [ -d ${fs} ]
   then

      echo "${me}> backing up \"${fs}\"..."
      ${dry_run} || ${bupth} index --update --one-file-system ${fs}
      ${dry_run} || ${bupth} save  --name=${bs}               ${fs}

   else
      echo "${me}> \"${fs}\" is not accessible, skipping..."
   fi

done
