#!/usr/bin/env perl

# Set the CPU frex governor

use warnings;
use strict;
use English;

die <<EOM unless ($UID == 0);
Must be root
EOM

open available_govenors_fd, "<",
   "/sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors" or die <<EOM;
Failed to read list of available governors: ${OS_ERROR}
EOM

my @available_govenors;
foreach my $available_govenor (split ' ', <available_govenors_fd>)
{
   push @available_govenors, $available_govenor;
}
close available_govenors_fd;

die <<EOM if (scalar @ARGV == 0);
Please choose a governor from the list:
\t@available_govenors
EOM

my $the_new_govenor = $ARGV[0];
my $conduit2allcpus = qq{| \
   tee /sys/devices/system/cpu/cpu*/cpufreq/scaling_governor \\
   1> /dev/null # not interested in stdout, just the files};

open all_cpus_fd, $conduit2allcpus or die <<EOM;
Cannot establish a conduit to all CPUs: ${OS_ERROR}
EOM

no warnings 'experimental::smartmatch';
if ($the_new_govenor ~~ @available_govenors)
{
   print "Setting '$the_new_govenor' as the new governor\n";
   print all_cpus_fd "$the_new_govenor\n" or die <<EOM
Cannot set '$the_new_govenor' as the new governor
EOM
} else {
   warn <<EOM;
$the_new_govenor is not available, skipping
EOM
}
close all_cpus_fd;
